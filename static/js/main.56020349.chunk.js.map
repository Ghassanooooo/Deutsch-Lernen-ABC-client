{"version":3,"sources":["store/reducers/authReducer.js","store/reducers/levelReducer.js","store/reducers/subjectReducer.js","store/reducers/subjectCountentReducer.js","store/reducers/index.js","store/actions/actionTypes.js","store/reducers/errorsReducer.js","setAxiosAuthHeader.js","store/actions/auth.js","store/actions/level.js","store/actions/subject.js","store/actions/subjectContent.js","components/common/spinner/spinner.js","components/level/level.js","components/subject/subject.js","components/subjectContent/subjectContent.js","components/common/input/input.js","components/addNewSubject/addNewSubject.js","components/editSubject/editSubject.js","components/addLevel/addLevel.js","components/logoutButton/logoutButton.js","components/navigation/navigation.js","components/login/login.js","components/signup/signup.js","components/addEditSubjectCountent/addEditSubjectCountent.js","App.js","PrivateRoute/PrivateRoute.js","serviceWorker.js","index.js"],"names":["initialState","user","token","loading","levels","subjects","subjectsCountent","combineReducers","auth","state","arguments","length","undefined","action","type","Object","objectSpread","userId","payload","errors","concat","push","setAuthToken","axios","defaults","headers","common","signup","data","history","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","setAuthLoading","post","sent","clearErrors","t0","response","error","stop","this","_x","apply","login","_ref2","_callee2","tokenDecoded","_context2","console","log","localStorage","setItem","expirationDate","setAxiosAuth","jwt_decode","_x2","logout","removeItem","currentUser","userData","getLevels","setlevelLoading","get","then","catch","e","addLevel","level","getSubjects","id","subject","setSubjectsLoading","addSubject","_id","getSubjectsContent","subjectsContent","setSubjectsContent","addSubjectsContent","SubjectsContent","withStyles","theme","progress","margin","props","classes","react_default","createElement","style","display","CircularProgress_default","size","className","color","thickness","Level","getItem","userDecoded","react","Link","to","map","items","key","marginBottom","titeldeutsch","titelarabisch","beschreibungdeutsch","beschreibungarabisch","spinner","Component","connect","actions","Subject","match","params","withRouter","subjectContent","beschreibung","inhalten","inhalt","deutsch","arabisch","beispielen","beispiel","title","InputFild","_this","find","o","param","name","label","value","onChange","placeholder","msg","AddNewSubject","onSubmitHandler","preventDefault","onChangeHandler","setState","defineProperty","target","onSubmit","input","EditSubject","for","AddLevel","LogoutButton","logoutHandler","onClick","Navigation","data-toggle","data-target","aria-controls","aria-expanded","aria-label","logoutButton","Login","email","password","Signup","username","confirmPassword","AddEditSubjectCountent","inhaltenDeutsch","inhaltenArabisch","beispielenDeutsch","beispielenArabisch","SubjectCountentData","App","component","rest","objectWithoutProperties","Route","assign","render","Redirect","navigation_navigation","Switch","path","exact","SubjectContent","addEditSubjectCountent","Boolean","window","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","es","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56020349.chunk.js","sourcesContent":["import * as actionType from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionType.CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        user: action.userId,\r\n        token: action.token\r\n      };\r\n\r\n    case actionType.AUTH_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case actionType.LOGIN_SUCCEED:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false\r\n      };\r\n    case actionType.LOGIN_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    case actionType.LOGOUT_SUCCEED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: null,\r\n        token: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionType from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  levels: null,\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionType.FETCH_LEVELS_SUCCEED:\r\n      return {\r\n        ...state,\r\n        levels: action.payload,\r\n        loading: false\r\n      };\r\n    case actionType.ADD_NEW_LEVEL:\r\n      return {\r\n        ...state,\r\n        levels: state.levels.concat(action.payload),\r\n        loading: false\r\n      };\r\n\r\n    case actionType.LEVELS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case actionType.FETCH_LEVELS_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionType from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  subjects: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionType.ADD_NEW_SUBJECT:\r\n      return {\r\n        ...state,\r\n        subjects: state.subjects.push(action.payload),\r\n        loading: false\r\n      };\r\n    case actionType.FETCH_SUBJECT_SUCCEED:\r\n      return {\r\n        ...state,\r\n        subjects: action.payload || [],\r\n        loading: false\r\n      };\r\n\r\n    case actionType.SUBJECT_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case actionType.FETCH_SUBJECT_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionType from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  subjectsCountent: null,\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionType.ADD_NEW_SUBJECT_CONTENT:\r\n      return {\r\n        ...state,\r\n        subjectsCountent: action.payload,\r\n        loading: false\r\n      };\r\n    case actionType.FETCH_SUBJECT_CONTENT_SUCCEED:\r\n      return {\r\n        ...state,\r\n        subjectsCountent: action.payload || null,\r\n        loading: false\r\n      };\r\n\r\n    case actionType.SUBJECT_CONTENT_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case actionType.FETCH_SUBJECT_CONTENT_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorsReducer from \"./errorsReducer\";\r\nimport levelsReducer from \"./levelReducer\";\r\nimport subjectsReducer from \"./subjectReducer\";\r\nimport subjectsCountentReducer from \"./subjectCountentReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorsReducer,\r\n  levels: levelsReducer,\r\n  subjects: subjectsReducer,\r\n  subjectsCountent: subjectsCountentReducer\r\n});\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\nexport const CURRENT_USER = \"CURRENT_USER\";\r\n\r\nexport const AUTH_LOADING = \"AUTH_LOADING\";\r\nexport const LOGIN_SUCCEED = \"LOGIN_SUCCEED\";\r\nexport const LOGOUT_SUCCEED = \"LOGOUT_SUCCEED\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\r\n\r\nexport const LEVELS_LOADING = \"LEVELS_LOADING\";\r\nexport const FETCH_LEVELS_SUCCEED = \"FETCH_LEVELS_SUCCEED\";\r\nexport const FETCH_LEVELS_FAILED = \"FETCH_LEVELS_FAILED\";\r\nexport const ADD_NEW_LEVEL = \"ADD_NEW_LEVEL\";\r\n\r\nexport const SUBJECT_LOADING = \"SUBJECT_LOADING\";\r\nexport const FETCH_SUBJECT_SUCCEED = \"FETCH_SUBJECT_SUCCEED\";\r\nexport const FETCH_SUBJECT_FAILED = \"FETCH_SUBJECT_FAILED\";\r\nexport const ADD_NEW_SUBJECT = \"ADD_NEW_SUBJECT\";\r\n\r\nexport const SUBJECT_CONTENT_LOADING = \"SUBJECT_CONTENT_LOADING\";\r\nexport const FETCH_SUBJECT_CONTENT_SUCCEED = \"FETCH_SUBJECT_CONTENT_SUCCEED\";\r\nexport const FETCH_SUBJECT_CONTENT_FAILED = \"FETCH_SUBJECT_CONTENT_FAILED\";\r\nexport const ADD_NEW_SUBJECT_CONTENT = \"ADD_NEW_SUBJECT_CONTENT\";\r\n","import * as actionType from \"../actions/actionTypes\";\r\n\r\nconst initialState = null;\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionType.GET_ERRORS:\r\n      return action.payload;\r\n    case actionType.CLEAR_ERRORS:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply to every request\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import * as actionType from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport setAxiosAuth from \"../../setAxiosAuthHeader\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const signup = (data, history) => async dispatch => {\r\n  try {\r\n    dispatch(setAuthLoading());\r\n    const user = await axios.post(\r\n      \"https://deutsch-lernen-abc.herokuapp.com/api/user/signup\",\r\n      data\r\n    );\r\n    if (user) {\r\n      dispatch(clearErrors());\r\n      history.push(\"/login\");\r\n    }\r\n  } catch (e) {\r\n    dispatch({\r\n      type: actionType.LOGIN_FAILED\r\n    });\r\n    dispatch({\r\n      type: actionType.GET_ERRORS,\r\n      payload: e.response.data.error || null\r\n    });\r\n  }\r\n};\r\n// export const checkAuthTimeout = (expiresTime) => {\r\n//    return dispatch => {\r\n//        setTimeout(() => {\r\n//            dispatch(logout())\r\n//        }, expiresTime)\r\n//    }\r\n// }\r\n\r\nexport const login = (data, history) => async dispatch => {\r\n  try {\r\n    dispatch(setAuthLoading());\r\n    const user = await axios.post(\r\n      \"https://deutsch-lernen-abc.herokuapp.com/api/user/login\",\r\n      data\r\n    );\r\n    if (user) {\r\n      console.log(user);\r\n      dispatch(clearErrors());\r\n      localStorage.setItem(\"token\", user.data.token);\r\n      localStorage.setItem(\"expirationDate\", user.data.expirationDate);\r\n      localStorage.setItem(\"userId\", user.data.userId);\r\n      setAxiosAuth(user.data.token);\r\n      const tokenDecoded = jwt_decode(user.data.token);\r\n      dispatch({\r\n        type: actionType.LOGIN_SUCCEED,\r\n        payload: tokenDecoded\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n  } catch (e) {\r\n    dispatch({\r\n      type: actionType.LOGIN_FAILED\r\n    });\r\n    dispatch({\r\n      type: actionType.GET_ERRORS,\r\n      payload: e.response.data.error || null\r\n    });\r\n  }\r\n};\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n\r\n  dispatch({\r\n    type: actionType.LOGOUT_SUCCEED\r\n  });\r\n};\r\n\r\nexport const currentUser = userData => {\r\n  return {\r\n    type: actionType.LOGIN_SUCCEED,\r\n    payload: userData\r\n  };\r\n};\r\n\r\n// Set loading state\r\nexport const setAuthLoading = () => {\r\n  return {\r\n    type: actionType.AUTH_LOADING\r\n  };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: actionType.CLEAR_ERRORS\r\n  };\r\n};\r\n","import * as actionType from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const getLevels = () => dispatch => {\r\n  dispatch(setlevelLoading());\r\n  axios\r\n    .get(\"https://deutsch-lernen-abc.herokuapp.com/api/level\")\r\n    .then(levels => {\r\n      dispatch({\r\n        type: actionType.FETCH_LEVELS_SUCCEED,\r\n        payload: levels.data\r\n      });\r\n    })\r\n    .catch(e => {\r\n      dispatch({\r\n        type: actionType.FETCH_LEVELS_FAILED\r\n      });\r\n      dispatch({\r\n        type: actionType.GET_ERRORS,\r\n        payload: e.response.data.error || null\r\n      });\r\n    });\r\n};\r\n\r\nexport const addLevel = (data, history) => async dispatch => {\r\n  try {\r\n    dispatch(setlevelLoading());\r\n    const level = await axios.post(\r\n      \"https://deutsch-lernen-abc.herokuapp.com/api/level/add\",\r\n      data\r\n    );\r\n    if (level) {\r\n      dispatch({\r\n        type: actionType.ADD_NEW_LEVEL,\r\n        payload: level.data\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n  } catch (e) {\r\n    dispatch({\r\n      type: actionType.GET_ERRORS,\r\n      payload: e.response.data.error || null\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading state\r\nexport const setlevelLoading = () => {\r\n  return {\r\n    type: actionType.LEVELS_LOADING\r\n  };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: actionType.CLEAR_ERRORS\r\n  };\r\n};\r\n","import * as actionType from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const getSubjects = id => async dispatch => {\r\n  console.log(id);\r\n\r\n  try {\r\n    dispatch(setSubjectsLoading());\r\n    const subject = await axios.get(\r\n      \"https://deutsch-lernen-abc.herokuapp.com/api/subject/\" + id\r\n    );\r\n    if (subject) {\r\n      console.log(subject.data);\r\n      dispatch({\r\n        type: actionType.FETCH_SUBJECT_SUCCEED,\r\n        payload: subject.data\r\n      });\r\n    }\r\n  } catch (e) {\r\n    dispatch({\r\n      type: actionType.FETCH_SUBJECT_FAILED\r\n    });\r\n    dispatch({\r\n      type: actionType.GET_ERRORS,\r\n      payload: e.response.data.error || null\r\n    });\r\n  }\r\n};\r\nexport const addSubject = (data, id, history) => dispatch => {\r\n  dispatch(setSubjectsLoading());\r\n  axios\r\n    .post(\r\n      \"https://deutsch-lernen-abc.herokuapp.com/api/subject/add/\" + id,\r\n      data\r\n    )\r\n    .then(subject => {\r\n      dispatch({\r\n        type: actionType.ADD_NEW_SUBJECT,\r\n        payload: subject.data\r\n      });\r\n      history.push(`/subject/subject-content/${subject.data._id}`);\r\n    })\r\n    .catch(e => {\r\n      dispatch({\r\n        type: actionType.GET_ERRORS,\r\n        payload: e.response.data.error || null\r\n      });\r\n    });\r\n};\r\n\r\n// Set loading state\r\nexport const setSubjectsLoading = () => {\r\n  return {\r\n    type: actionType.SUBJECT_LOADING\r\n  };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: actionType.CLEAR_ERRORS\r\n  };\r\n};\r\n","import * as actionType from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const getSubjectsContent = id => async dispatch => {\r\n  try {\r\n    dispatch(setSubjectsContent());\r\n    const subjectsContent = await axios.get(\r\n      \"https://deutsch-lernen-abc.herokuapp.com/api/subjectContent/\" + id\r\n    );\r\n    if (subjectsContent) {\r\n      dispatch({\r\n        type: actionType.FETCH_SUBJECT_CONTENT_SUCCEED,\r\n        payload: subjectsContent.data\r\n      });\r\n    }\r\n  } catch (e) {\r\n    dispatch({\r\n      type: actionType.FETCH_SUBJECT_CONTENT_FAILED\r\n    });\r\n    dispatch({\r\n      type: actionType.GET_ERRORS,\r\n      payload: e.response.data.error || null\r\n    });\r\n  }\r\n};\r\nexport const addSubjectsContent = (data, id, history) => dispatch => {\r\n  dispatch(setSubjectsContent());\r\n  axios\r\n    .post(\r\n      \"https://deutsch-lernen-abc.herokuapp.com/api/subjectContent/add/\" + id,\r\n      data\r\n    )\r\n    .then(SubjectsContent => {\r\n      history.push(\"/subject/subject-content/\" + SubjectsContent.data.subject);\r\n      dispatch({\r\n        type: actionType.ADD_NEW_SUBJECT_CONTENT,\r\n        payload: SubjectsContent.data\r\n      });\r\n    })\r\n    .catch(e => {\r\n      dispatch({\r\n        type: actionType.GET_ERRORS,\r\n        payload: e.response.data.error || null\r\n      });\r\n    });\r\n};\r\n\r\n// Set loading state\r\nexport const setSubjectsContent = () => {\r\n  return {\r\n    type: actionType.SUBJECT_CONTENT_LOADING\r\n  };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: actionType.CLEAR_ERRORS\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import purple from \"@material-ui/core/colors/purple\";\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: \" auto\"\r\n  }\r\n});\r\n\r\nfunction Spinner(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <CircularProgress\r\n        size={100}\r\n        className={classes.progress}\r\n        color=\"secondary\"\r\n        thickness={7}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Spinner);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../common/spinner/spinner\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAxiosAuth from \"../../setAxiosAuthHeader\";\r\n\r\nclass Level extends Component {\r\n  componentDidMount() {\r\n    this.props.getLevels();\r\n    if (localStorage.getItem(\"token\")) {\r\n      const token = localStorage.getItem(\"token\");\r\n      setAxiosAuth(token);\r\n      const userDecoded = jwt_decode(token);\r\n      if (userDecoded) {\r\n        this.props.currentUser(userDecoded);\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <Fragment>\r\n        {this.props.user ? (\r\n          <Link to={\"/level/add-level\"} className=\"btn btn-primary\">\r\n            Add New Level\r\n          </Link>\r\n        ) : null}\r\n        {this.props.levels ? (\r\n          this.props.levels.map(items => (\r\n            <div\r\n              key={items._id}\r\n              className=\"card text-center\"\r\n              style={{ marginBottom: \"10px\" }}\r\n            >\r\n              <div className=\"card-header\">\r\n                {items.titeldeutsch} | {items.titelarabisch}\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\">{items.beschreibungdeutsch}</p>\r\n                <p className=\"card-text\">{items.beschreibungarabisch}</p>\r\n                <Link to={\"/subject/\" + items._id} className=\"btn btn-primary\">\r\n                  Go to the class\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  levels: state.levels.levels,\r\n  loading: state.levels.loading,\r\n  user: state.auth.user\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(Level);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport Spinner from \"../common/spinner/spinner\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAxiosAuth from \"../../setAxiosAuthHeader\";\r\n\r\nclass Subject extends Component {\r\n  componentDidMount() {\r\n    if (this.props.match.params.id) {\r\n      this.props.getSubjects(this.props.match.params.id);\r\n    }\r\n    if (localStorage.getItem(\"token\")) {\r\n      const token = localStorage.getItem(\"token\");\r\n      setAxiosAuth(token);\r\n      const userDecoded = jwt_decode(token);\r\n      if (userDecoded) {\r\n        this.props.currentUser(userDecoded);\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <Fragment>\r\n        {this.props.user ? (\r\n          <Link\r\n            to={\"/add-new-subject/\" + this.props.match.params.id}\r\n            className=\"btn btn-primary mr-3 mt-5\"\r\n          >\r\n            add\r\n          </Link>\r\n        ) : null}\r\n\r\n        {!this.props.loading ? (\r\n          this.props.subjects.length <= 0 ? (\r\n            <p> Please Add Some Subjects!</p>\r\n          ) : (\r\n            <div className=\"card mt-5\">\r\n              <ul className=\"list-group list-group-flush\">\r\n                {this.props.subjects.map(subject => (\r\n                  <li key={subject._id} className=\"list-group-item\">\r\n                    <Link to={`/subject/subject-content/${subject._id}`}>\r\n                      {subject.titeldeutsch} || {subject.titelarabisch}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  subjects: state.subjects.subjects,\r\n  loading: state.subjects.loading,\r\n  user: state.auth.user\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(withRouter(Subject));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport Spinner from \"../common/spinner/spinner\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAxiosAuth from \"../../setAxiosAuthHeader\";\r\n\r\nclass subjectContent extends Component {\r\n  componentDidMount() {\r\n    if (this.props.match.params.id) {\r\n      this.props.getSubjectsContent(this.props.match.params.id);\r\n    }\r\n    if (localStorage.getItem(\"token\")) {\r\n      const token = localStorage.getItem(\"token\");\r\n      setAxiosAuth(token);\r\n      const userDecoded = jwt_decode(token);\r\n      if (userDecoded) {\r\n        this.props.currentUser(userDecoded);\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <Fragment>\r\n        {this.props.user ? (\r\n          <Link\r\n            to={\"/add-edit-new-subject-Countent/\" + this.props.match.params.id}\r\n            className=\"btn btn-primary mr-3 mt-5\"\r\n          >\r\n            add & Edit\r\n          </Link>\r\n        ) : null}\r\n        {this.props.loading ? (\r\n          <Spinner />\r\n        ) : this.props.subjectsCountent ? (\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              {this.props.subjectsCountent.beschreibung}\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <blockquote className=\"blockquote mb-0\">\r\n                {this.props.subjectsCountent.inhalten &&\r\n                  this.props.subjectsCountent.inhalten.map(inhalt => (\r\n                    <p key={inhalt._id}>\r\n                      {inhalt.deutsch} | {inhalt.arabisch}\r\n                    </p>\r\n                  ))}\r\n                {this.props.subjectsCountent.beispielen &&\r\n                  this.props.subjectsCountent.beispielen.map(beispiel => (\r\n                    <footer key={beispiel._id} className=\"blockquote-footer\">\r\n                      {beispiel.deutsch} |\r\n                      <cite title=\"Source Title\">{beispiel.arabisch}</cite>\r\n                    </footer>\r\n                  ))}\r\n              </blockquote>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p>Please Add Subject Content</p>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.subjectsCountent.loading,\r\n  errors: state.errors,\r\n  subjectsCountent: state.subjectsCountent.subjectsCountent,\r\n  user: state.auth.user\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(withRouter(subjectContent));\r\n","import React, { Component } from \"react\";\r\n\r\nclass InputFild extends Component {\r\n  render() {\r\n    let errors = null;\r\n    if (this.props.errors) {\r\n      errors =\r\n        this.props.errors.find(o => o.param === this.props.name) ||\r\n        this.props.errors;\r\n    }\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{this.props.label}</label>\r\n        <input\r\n          value={this.props.value}\r\n          name={this.props.name}\r\n          onChange={this.props.onChange}\r\n          type={this.props.type || \"text\"}\r\n          className={(errors && \"is-invalid form-control\") || \"form-control\"}\r\n          placeholder={this.props.placeholder}\r\n        />\r\n        {errors && <div className=\"invalid-feedback\">{errors.msg}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFild;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport InputFild from \"../common/input/input\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAxiosAuth from \"../../setAxiosAuthHeader\";\r\n\r\nclass AddNewSubject extends Component {\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      const token = localStorage.getItem(\"token\");\r\n      setAxiosAuth(token);\r\n      const userDecoded = jwt_decode(token);\r\n      if (userDecoded) {\r\n        this.props.currentUser(userDecoded);\r\n      }\r\n    }\r\n  }\r\n  state = {\r\n    titeldeutsch: \"\",\r\n    titelarabisch: \"\"\r\n  };\r\n  onSubmitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    // axios\r\n    //   .post(\r\n    //     \"https://deutsch-lernen-abc.herokuapp.com/api/subject/add/\" +\r\n    //       this.props.match.params.id,\r\n    //     {\r\n    //       titeldeutsch: this.state.titeldeutsch,\r\n    //       titelarabisch: this.state.titelarabisch\r\n    //     }\r\n    //   )\r\n    //   .then(subject => this.props.history.push(`/subject/${subject.data._id}`));\r\n\r\n    this.props.addSubject(\r\n      {\r\n        titeldeutsch: this.state.titeldeutsch,\r\n        titelarabisch: this.state.titelarabisch\r\n      },\r\n      this.props.match.params.id,\r\n      this.props.history\r\n    );\r\n    console.log(this.props.match.params.id);\r\n  };\r\n  onChangeHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <h3>Add a new Subject</h3>\r\n        {this.props.match.params.id && (\r\n          <form onSubmit={this.onSubmitHandler}>\r\n            <InputFild\r\n              name=\"titeldeutsch\"\r\n              value={this.state.titeldeutsch}\r\n              onChange={this.onChangeHandler}\r\n              label=\"German Title\"\r\n              placeholder=\"Add Title in German\"\r\n            />\r\n            <InputFild\r\n              name=\"titelarabisch\"\r\n              value={this.state.titelarabisch}\r\n              onChange={this.onChangeHandler}\r\n              label=\"Arabic Title\"\r\n              placeholder=\"Add Title in Arabic\"\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              ADD Subject\r\n            </button>\r\n          </form>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(withRouter(AddNewSubject));\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nclass EditSubject extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h3>Edit a exist object</h3>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label for=\"formGroupExampleInput\">Object Title</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"formGroupExampleInput\"\r\n              placeholder=\"Edit the title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"formGroupExampleInput2\">the object in German</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"formGroupExampleInput2\"\r\n              placeholder=\"Edit the object in german\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"formGroupExampleInput2\">the object in Arabic</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"formGroupExampleInput2\"\r\n              placeholder=\"Edit the object in Arabic\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"formGroupExampleInput2\">Description in Arabic</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"formGroupExampleInput2\"\r\n              placeholder=\"Edit Description in Arabic\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            EDIT\r\n          </button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditSubject;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport InputFild from \"../common/input/input\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAxiosAuth from \"../../setAxiosAuthHeader\";\r\n\r\nclass AddLevel extends Component {\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      const token = localStorage.getItem(\"token\");\r\n      setAxiosAuth(token);\r\n      const userDecoded = jwt_decode(token);\r\n      if (userDecoded) {\r\n        this.props.currentUser(userDecoded);\r\n      }\r\n    }\r\n  }\r\n  state = {\r\n    titeldeutsch: \"\",\r\n    beschreibungdeutsch: \"\",\r\n    titelarabisch: \"\",\r\n    beschreibungarabisch: \"\"\r\n  };\r\n  onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    this.props.addLevel(\r\n      {\r\n        titeldeutsch: this.state.titeldeutsch,\r\n        beschreibungdeutsch: this.state.beschreibungdeutsch,\r\n        titelarabisch: this.state.titelarabisch,\r\n        beschreibungarabisch: this.state.beschreibungarabisch\r\n      },\r\n\r\n      this.props.history\r\n    );\r\n  };\r\n  onChangeHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <h3>Add New Level</h3>\r\n        <form onSubmit={this.onSubmitHandler}>\r\n          <InputFild\r\n            name=\"titeldeutsch\"\r\n            value={this.state.titeldeutsch}\r\n            onChange={this.onChangeHandler}\r\n            label=\"German Title\"\r\n            placeholder=\"Add Title in German\"\r\n          />\r\n          <InputFild\r\n            name=\"beschreibungdeutsch\"\r\n            value={this.state.beschreibungdeutsch}\r\n            onChange={this.onChangeHandler}\r\n            label=\"German Discription\"\r\n            placeholder=\"Add Discription in German\"\r\n          />\r\n          <InputFild\r\n            name=\"titelarabisch\"\r\n            value={this.state.titelarabisch}\r\n            onChange={this.onChangeHandler}\r\n            label=\"Arabic Title\"\r\n            placeholder=\"Add Title in Arabic\"\r\n          />\r\n\r\n          <InputFild\r\n            name=\"beschreibungarabisch\"\r\n            value={this.state.beschreibungarabisch}\r\n            onChange={this.onChangeHandler}\r\n            label=\"Arabic Discription\"\r\n            placeholder=\"Add Discription in Arabic\"\r\n          />\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            ADD NEW LEVEL\r\n          </button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(withRouter(AddLevel));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nclass LogoutButton extends Component {\r\n\r\n  logoutHandler=()=>{\r\nthis.props.logout()\r\n    this.props.history.push(\"/\")\r\n  }\r\n  render() {\r\n    return (\r\n\r\n        <button type=\"button\" onClick={this.logoutHandler} className=\"btn btn-primary\">\r\n          Logout\r\n        </button>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  actions\r\n)(withRouter(LogoutButton));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navigation.css\";\r\nimport LogoutButton from \"../logoutButton/logoutButton\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg bg-secondary navbar-light \">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Navbar\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNavDropdown\"\r\n            aria-controls=\"navbarNavDropdown\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div\r\n            className=\"collapse navbar-collapse NavigationFlexFix\"\r\n            id=\"navbarNavDropdown\"\r\n          >\r\n            <ul className=\"navbar-nav\">\r\n              {this.props.user ? (\r\n                <li className=\"nav-item\">\r\n                  <LogoutButton />\r\n                </li>\r\n              ) : (\r\n                <Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\">\r\n                      login\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/signup\">\r\n                      Sign up\r\n                    </Link>\r\n                  </li>\r\n                </Fragment>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user\r\n});\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions\";\r\nimport InputFild from \"../common/input/input\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    this.props.login(\r\n      {\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      },\r\n      this.props.history\r\n    );\r\n  };\r\n  onChangeHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    const { errors } = this.props;\r\n    console.log(errors);\r\n    return (\r\n      <Fragment>\r\n        <h3>Login</h3>\r\n        <form onSubmit={this.onSubmitHandler}>\r\n          <InputFild\r\n            value={this.state.email}\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            onChange={this.onChangeHandler}\r\n            errors={errors}\r\n            placeholder=\"Your Email\"\r\n          />\r\n          <InputFild\r\n            value={this.state.password}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            placeholder=\"Your Password\"\r\n            onChange={this.onChangeHandler}\r\n            errors={errors}\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(withRouter(Login));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport InputFild from \"../common/input/input\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  };\r\n  onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    this.props.signup(\r\n      {\r\n        username: this.state.username,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        confirmPassword: this.state.confirmPassword\r\n      },\r\n      this.props.history\r\n    );\r\n  };\r\n  onChangeHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    const { errors } = this.props;\r\n    console.log(errors);\r\n    return (\r\n      <Fragment>\r\n        <h3>Signup</h3>\r\n        <form onSubmit={this.onSubmitHandler}>\r\n          <InputFild\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.onChangeHandler}\r\n            label=\"User Name\"\r\n            placeholder=\"Your user Name\"\r\n            errors={errors}\r\n          />\r\n          <InputFild\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.onChangeHandler}\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            placeholder=\"Your Email\"\r\n            errors={errors}\r\n          />\r\n          <InputFild\r\n            value={this.state.password}\r\n            onChange={this.onChangeHandler}\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Your Password\"\r\n            errors={errors}\r\n          />\r\n          <InputFild\r\n            value={this.state.confirmPassword}\r\n            name=\"confirmPassword\"\r\n            onChange={this.onChangeHandler}\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            errors={errors}\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Signup\r\n          </button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(withRouter(Signup));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport InputFild from \"../common/input/input\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAxiosAuth from \"../../setAxiosAuthHeader\";\r\n\r\nclass AddEditSubjectCountent extends Component {\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      const token = localStorage.getItem(\"token\");\r\n      setAxiosAuth(token);\r\n      const userDecoded = jwt_decode(token);\r\n      if (userDecoded) {\r\n        this.props.currentUser(userDecoded);\r\n      }\r\n    }\r\n  }\r\n  state = {\r\n    beschreibung: \"\",\r\n    inhaltenDeutsch: \"\",\r\n    inhaltenArabisch: \"\",\r\n    beispielenDeutsch: \"\",\r\n    beispielenArabisch: \"\"\r\n  };\r\n  onSubmitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    const SubjectCountentData = {\r\n      beschreibung: this.state.beschreibung,\r\n      inhaltenDeutsch: this.state.inhaltenDeutsch,\r\n      inhaltenArabisch: this.state.inhaltenArabisch,\r\n      beispielenDeutsch: this.state.beispielenDeutsch,\r\n      beispielenArabisch: this.state.beispielenArabisch\r\n    };\r\n    this.props.addSubjectsContent(\r\n      SubjectCountentData,\r\n      this.props.match.params.id,\r\n      this.props.history\r\n    );\r\n    // axios\r\n    //   .post(\r\n    //     \"http://localhost:5000/api/subjectContent/add/\" +\r\n    //       this.props.match.params.id,\r\n    //     SubjectCountentData\r\n    //   )\r\n    //   .then(res => {\r\n    //     this.props.history.push(\"/subject/subject-content/\" + res.data._id);\r\n    //   });\r\n\r\n    // this.props.addSubjectCountent(\r\n    //   this.props.match.params.id,\r\n    //   SubjectCountentData,\r\n    //   this.props.history\r\n    // );\r\n    // console.log(this.props.match.params.id);\r\n  };\r\n  onChangeHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <h3>Add a new Subject Countent</h3>\r\n        {this.props.match.params.id && (\r\n          <form onSubmit={this.onSubmitHandler}>\r\n            <InputFild\r\n              name=\"beschreibung\"\r\n              value={this.state.beschreibung}\r\n              onChange={this.onChangeHandler}\r\n              label=\"Description *\"\r\n              placeholder=\"Add some Description\"\r\n            />\r\n            <InputFild\r\n              name=\"inhaltenDeutsch\"\r\n              value={this.state.inhaltenDeutsch}\r\n              onChange={this.onChangeHandler}\r\n              label=\"Subject Countent German * Split the content by ,\"\r\n              placeholder=\"Split the content by ,\"\r\n            />\r\n            <InputFild\r\n              name=\"inhaltenArabisch\"\r\n              value={this.state.inhaltenArabisch}\r\n              onChange={this.onChangeHandler}\r\n              label=\"Subject Countent Arabic * Split the content by ,\"\r\n              placeholder=\"Split the content by ,\"\r\n            />\r\n            <InputFild\r\n              name=\"beispielenDeutsch\"\r\n              value={this.state.beispielenDeutsch}\r\n              onChange={this.onChangeHandler}\r\n              label=\"Examples German * Split the content by ,\"\r\n              placeholder=\"Split the content by ,\"\r\n            />\r\n            <InputFild\r\n              name=\"beispielenArabisch\"\r\n              value={this.state.beispielenArabisch}\r\n              onChange={this.onChangeHandler}\r\n              label=\"Examples Arabic * Split the content by ,\"\r\n              placeholder=\"Split the content by ,\"\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              ADD Subject Countent\r\n            </button>\r\n          </form>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(withRouter(AddEditSubjectCountent));\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport Level from \"./components/level/level\";\nimport Subject from \"./components/subject/subject\";\nimport SubjectContent from \"./components/subjectContent/subjectContent\";\nimport AddNewSubject from \"./components/addNewSubject/addNewSubject\";\nimport EditSubject from \"./components/editSubject/editSubject\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AddLevel from \"./components/addLevel/addLevel\";\nimport Navigation from \"./components/navigation/navigation\";\nimport Login from \"./components/login/login\";\nimport Signup from \"./components/signup/signup\";\nimport addEditSubjectCountent from \"./components/addEditSubjectCountent/addEditSubjectCountent\";\nimport PrivateRoute from \"./PrivateRoute/PrivateRoute\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Switch>\n          <div className=\"container\">\n            <Route path=\"/\" exact component={Level} />\n            <Route path=\"/subject/:id\" exact component={Subject} />\n            <Route\n              path=\"/subject/subject-content/:id\"\n              exact\n              component={SubjectContent}\n            />\n            <Route path=\"/level/add-level\" exact component={AddLevel} />\n            {/* <Route\n            path=\"/SubColections/SubColectionContent/:id\"\n            exact\n            component={SubColectionContent}\n          /> */}\n\n            <Route path=\"/login\" exact component={Login} />\n\n            <Route path=\"/signup\" exact component={Signup} />\n\n            <Route\n              path=\"/add-new-subject/:id\"\n              exact\n              component={AddNewSubject}\n            />\n            <Route\n              path=\"/add-edit-new-subject-Countent/:id\"\n              exact\n              component={addEditSubjectCountent}\n            />\n\n            <Route path=\"/edit-subject\" exact component={EditSubject} />\n          </div>\n        </Switch>\n\n        {/* <SubColections />\n        <SubColectionContent /> */}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => (auth ? <Component {...props} /> : <Redirect to=\"/\" />)}\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth.user\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./store/reducers\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst composeEnhancers =\n  // process.env.NODE_ENV === \"development\"\n  //  ?\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||\n  //   : null\n  compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}